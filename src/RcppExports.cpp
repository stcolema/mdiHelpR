// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// createSimilarityMat
arma::mat createSimilarityMat(arma::umat cluster_record);
RcppExport SEXP _mdiHelpR_createSimilarityMat(SEXP cluster_recordSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat >::type cluster_record(cluster_recordSEXP);
    rcpp_result_gen = Rcpp::wrap(createSimilarityMat(cluster_record));
    return rcpp_result_gen;
END_RCPP
}
// quickPSM
arma::mat quickPSM(arma::umat partitions, double tol);
RcppExport SEXP _mdiHelpR_quickPSM(SEXP partitionsSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat >::type partitions(partitionsSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(quickPSM(partitions, tol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mdiHelpR_createSimilarityMat", (DL_FUNC) &_mdiHelpR_createSimilarityMat, 1},
    {"_mdiHelpR_quickPSM", (DL_FUNC) &_mdiHelpR_quickPSM, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_mdiHelpR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
